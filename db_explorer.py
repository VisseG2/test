#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö ZKTeco Access Control
"""

import sqlite3
import json
from datetime import datetime

DATABASE_NAME = 'zkteco_access_control.db'

def get_db_connection():
    conn = sqlite3.connect(DATABASE_NAME)
    conn.row_factory = sqlite3.Row
    return conn

def explore_database():
    print("=== –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï –ë–ê–ó–´ –î–ê–ù–ù–´–• ZKTeco ===\n")
    
    conn = get_db_connection()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
    tables = conn.execute("SELECT name FROM sqlite_master WHERE type='table'").fetchall()
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: {len(tables)}")
    for table in tables:
        print(f"  - {table['name']}")
    print()
    
    # –ò–∑—É—á–∞–µ–º –∫–∞–∂–¥—É—é —Ç–∞–±–ª–∏—Ü—É
    for table in tables:
        table_name = table['name']
        print(f"üîç –¢–ê–ë–õ–ò–¶–ê: {table_name}")
        print("-" * 50)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        schema = conn.execute(f"PRAGMA table_info({table_name})").fetchall()
        print("–°—Ç—Ä—É–∫—Ç—É—Ä–∞:")
        for column in schema:
            print(f"  {column['name']} ({column['type']}) {'NOT NULL' if column['notnull'] else ''} {'PRIMARY KEY' if column['pk'] else ''}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
        count = conn.execute(f"SELECT COUNT(*) as count FROM {table_name}").fetchone()
        print(f"–ó–∞–ø–∏—Å–µ–π: {count['count']}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤ –∑–∞–ø–∏—Å–µ–π
        if count['count'] > 0:
            print("–ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø–∏—Å–µ–π:")
            examples = conn.execute(f"SELECT * FROM {table_name} LIMIT 5").fetchall()
            for i, row in enumerate(examples, 1):
                print(f"  –ó–∞–ø–∏—Å—å {i}: {dict(row)}")
        
        print("\n")
    
    conn.close()

def simulate_device_request():
    """–°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã –æ—Ç —Ç–µ—Ä–º–∏–Ω–∞–ª–∞"""
    print("=== –°–ò–ú–£–õ–Ø–¶–ò–Ø –ó–ê–ü–†–û–°–û–í –û–¢ –¢–ï–†–ú–ò–ù–ê–õ–ê ===\n")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
    print("1. –°–∏–º—É–ª—è—Ü–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:")
    print("POST /iclock/registry?SN=TEST123456")
    print("–û—Ç–≤–µ—Ç: RegistryCode=GeneratedCode123")
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –≤ –ë–î
    conn = get_db_connection()
    try:
        conn.execute("INSERT OR REPLACE INTO devices (sn, ip_address, last_seen) VALUES (?, ?, ?)", 
                    ('TEST123456', '192.168.1.100', datetime.now()))
        conn.commit()
        print("‚úÖ –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –±–∞–∑—É")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫–æ–º–∞–Ω–¥
    print("\n2. –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∫–æ–º–∞–Ω–¥:")
    print("GET /iclock/getrequest?SN=TEST123456")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    commands = conn.execute("SELECT * FROM pending_commands WHERE device_sn = ?", ('TEST123456',)).fetchall()
    if commands:
        print(f"–ù–∞–π–¥–µ–Ω–æ –∫–æ–º–∞–Ω–¥: {len(commands)}")
        for cmd in commands:
            print(f"  –ö–æ–º–∞–Ω–¥–∞: {cmd['command_string']}")
    else:
        print("–ö–æ–º–∞–Ω–¥ –Ω–µ—Ç, –æ—Ç–≤–µ—Ç: OK")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n3. –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    print("POST /iclock/cdata?SN=TEST123456&table=user")
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        conn.execute("INSERT OR REPLACE INTO users (pin, name, card_no) VALUES (?, ?, ?)", 
                    ('1001', '–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', '12345'))
        conn.commit()
        print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–æ—Å—Ç—É–ø–∞
    print("\n4. –°–∏–º—É–ª—è—Ü–∏—è —Å–æ–±—ã—Ç–∏—è –¥–æ—Å—Ç—É–ø–∞:")
    print("POST /iclock/cdata?SN=TEST123456&table=rtlog")
    
    try:
        conn.execute("INSERT INTO event_logs (device_sn, user_pin, event_time, event_type, verification_mode, door_id) VALUES (?, ?, ?, ?, ?, ?)", 
                    ('TEST123456', '1001', datetime.now(), '1', '1', '1'))
        conn.commit()
        print("‚úÖ –°–æ–±—ã—Ç–∏–µ –∑–∞–ø–∏—Å–∞–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    conn.close()
    print()

def add_test_commands():
    """–î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞"""
    print("=== –î–û–ë–ê–í–õ–ï–ù–ò–ï –¢–ï–°–¢–û–í–´–• –ö–û–ú–ê–ù–î ===\n")
    
    conn = get_db_connection()
    
    test_commands = [
        "C:101:DATA UPDATE user Pin=1002\tName=–ù–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\tPrivilege=0\tCardNo=67890\tPassword=",
        "C:1:DATA QUERY tablename=user,fielddesc=*,filter=*",
        "C:2:DATA QUERY tablename=templatev10,fielddesc=*,filter=*",
        "C:201:ENROLL_BIO TYPE=0\tPIN=1002\tRETRY=3\tOVERWRITE=1\tMODE=1"
    ]
    
    for i, cmd in enumerate(test_commands, 1):
        try:
            conn.execute("INSERT INTO pending_commands (device_sn, command_string) VALUES (?, ?)", 
                        ('TEST123456', cmd))
            print(f"‚úÖ –ö–æ–º–∞–Ω–¥–∞ {i} –¥–æ–±–∞–≤–ª–µ–Ω–∞: {cmd[:50]}...")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã {i}: {e}")
    
    conn.commit()
    conn.close()
    print()

def show_device_communication_flow():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ–±—â–µ–Ω–∏–µ —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º"""
    print("=== –ü–û–¢–û–ö –ö–û–ú–ú–£–ù–ò–ö–ê–¶–ò–ò –° –£–°–¢–†–û–ô–°–¢–í–û–ú ===\n")
    
    flow = [
        ("1. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", "POST /iclock/registry?SN=DEVICE123", "RegistryCode=Generated123"),
        ("2. –ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å", "GET /iclock/cdata?SN=DEVICE123", "registry=ok\\nServerVersion=3.0.1\\nRealtime=1\\nRequestDelay=10"),
        ("3. –ó–∞–ø—Ä–æ—Å –∫–æ–º–∞–Ω–¥", "GET /iclock/getrequest?SN=DEVICE123", "C:1:DATA QUERY tablename=user..."),
        ("4. –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö", "POST /iclock/cdata?SN=DEVICE123&table=user", "OK"),
        ("5. –°–æ–±—ã—Ç–∏–µ –¥–æ—Å—Ç—É–ø–∞", "POST /iclock/cdata?SN=DEVICE123&table=rtlog", "OK"),
        ("6. –£–¥–∞–ª–µ–Ω–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è", "POST /iclock/cdata?SN=DEVICE123&AuthType=device", "AUTH=SUCCESS\\nTIPS=Welcome!"),
    ]
    
    for step, request, response in flow:
        print(f"üì± {step}")
        print(f"   –ó–∞–ø—Ä–æ—Å:  {request}")
        print(f"   –û—Ç–≤–µ—Ç:   {response}")
        print()

if __name__ == "__main__":
    explore_database()
    simulate_device_request()
    add_test_commands()
    show_device_communication_flow()
    
    print("üéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:")
    print("- –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–¥–µ—Ä–∂–∏—Ç 5 –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü")
    print("- –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é—Ç—Å—è —á–µ—Ä–µ–∑ /iclock/registry") 
    print("- –ö–æ–º–∞–Ω–¥—ã –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ pending_commands —Ç–∞–±–ª–∏—Ü—É")
    print("- –°–æ–±—ã—Ç–∏—è —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ event_logs")
    print("- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏ –±–∏–æ–º–µ—Ç—Ä–∏—è —É–ø—Ä–∞–≤–ª—è—é—Ç—Å—è —á–µ—Ä–µ–∑ DATA UPDATE –∫–æ–º–∞–Ω–¥—ã")
    print("- –°–∏—Å—Ç–µ–º–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —É–¥–∞–ª–µ–Ω–Ω—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é")
